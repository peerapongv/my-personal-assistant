[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "my-personal-assistant-api"
version = "0.1.0"
description = "API service for AI-driven Jira Assistant"
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
authors = [
    { name = "Your Name", email = "your.email@example.com" }
]
dependencies = [
    "fastapi>=0.100.0",
    "uvicorn>=0.22.0",
    "httpx>=0.24.0",
    "langchain>=0.0.300",
    "langchain-community>=0.0.1",
    "langchain-openai>=0.0.1",
    "pydantic>=2.0.0",
    "python-dotenv>=1.0.0",
    "structlog>=23.0.0",
    "tenacity>=8.2.0",
    "jira-assistant-shared",
    "jira>=3.5.1",  # For Jira DC v9.4.9 compatibility
    "python-jose[cryptography]>=3.3.0",  # For JWT handling
]

[project.optional-dependencies]
dev = [
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "types-requests>=2.31.0",
    "pytest-httpx>=0.24.0",  # For testing HTTP clients
    "pytest-mock>=3.11.1",   # For mocking in tests
]

[tool.ruff]
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "F",  # pyflakes
    "I",  # isort
    "N",  # pep8-naming
    "W",  # pycodestyle warnings
    "UP", # pyupgrade
]
ignore = []

[tool.ruff.lint.isort]
known-first-party = ["my_personal_assistant_api", "my_personal_assistant_shared"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
